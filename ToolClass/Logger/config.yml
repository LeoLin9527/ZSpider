version: 1
disable_existing_loggers: False

formatters:
  brief:
    format: "%(asctime)s - %(message)s"
    datefmt: '%F %T'
  simple:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

handlers:
  console:
    class : logging.StreamHandler
    formatter: brief
    level   : INFO
    stream  : ext://sys.stdout

  file:
    class : logging.FileHandler
    formatter: simple
    level: DEBUG
    filename: mydebug.log

  error:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: simple
    filename: myerror.log
    maxBytes: 10485760
    backupCount: 20
    encoding: utf8

loggers:
  main:
    level: WARNING
    handlers: [file,error]

root:
  level: DEBUG
  handlers: [console]


# 上面的配置中, disable_existing_loggers默认为true, 说明当前的配置会覆盖调以前的配置;
# formatters, 定义了一组formatID, 每种都有自己的格式;
# handlers, 定义了一组handler的ID, 其中class是必须的, 其它参数是用于构建相应的handler类对象时使用到的参数; 这里的console的类, 用了默认的stdout来输出;
# loggers, 定义真正使用的loggerID和格式, 如这里的fileLogger, 就是在代码中通过logger = logging.getLogger("fileLogger")来获得该类型的logger;
# root, 默认情况下的输出配置, 当logging.getLogger("type")里面的type没有时, 就是用的这个默认的root,
# 如logging.getLogger(__name__)或logging.getLogger(); 没有这个root, 则这些将不会有输出。
